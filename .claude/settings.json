{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebFetch(domain:amazon.com)",
      "WebFetch(domain:anthropic.com)",
      "WebFetch(domain:apple.com)",
      "WebFetch(domain:arxiv.org)",
      "WebFetch(domain:brew.sh)",
      "WebFetch(domain:coinbase.com)",
      "WebFetch(domain:containers.dev)",
      "WebFetch(domain:devcenter.heroku.com)",
      "WebFetch(domain:developer.android.com)",
      "WebFetch(domain:developer.apple.com)",
      "WebFetch(domain:developers.cloudflare.com)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.cdp.coinbase.com)",
      "WebFetch(domain:docs.cloud.coinbase.com)",
      "WebFetch(domain:docs.docker.com)",
      "WebFetch(domain:docs.expo.dev)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:elevenlabs.io)",
      "WebFetch(domain:fly.io)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:github.io)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:google.com)",
      "WebFetch(domain:heroku.com)",
      "WebFetch(domain:huggingface.co)",
      "WebFetch(domain:llmstxt.org)",
      "WebFetch(domain:microsoft.com)",
      "WebFetch(domain:news.ycombinator.com)",
      "WebFetch(domain:npmjs.com)",
      "WebFetch(domain:nodejs.org)",
      "WebFetch(domain:openai.com)",
      "WebFetch(domain:platform.openai.com)",
      "WebFetch(domain:pkg.go.dev)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:python.org)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:reactnative.dev)",
      "WebFetch(domain:reactnavigation.org)",
      "WebFetch(domain:reddit.com)",
      "WebFetch(domain:rubocop.org)",
      "WebFetch(domain:rubygems.org)",
      "WebFetch(domain:ruby-lang.org)",
      "WebFetch(domain:rubyonrails.org)",
      "WebFetch(domain:rust-lang.org)",
      "WebFetch(domain:source.android.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:supabase.com)",
      "WebFetch(domain:superuser.com)",
      "WebFetch(domain:tauri.app)",
      "WebFetch(domain:wealthsimple.com)",
      "WebFetch(domain:yarnpkg.com)",
      "Bash(assetutil:*)",
      "Bash(bundle:*)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(chmod:*)",
      "Bash(convert:*)",
      "Bash(cp:*)",
      "Bash(date:*)",
      "Bash(df:*)",
      "Bash(done:*)",
      "Bash(du:*)",
      "Bash(echo:*)",
      "Bash(env:*)",
      "Bash(fc-scan:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git pull:*)",
      "Bash(git status:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(heroku:*)",
      "Bash(history:*)",
      "Bash(ln:*)",
      "Bash(ls:*)",
      "Bash(magick:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(pkill:*)",
      "Bash(plutil:*)",
      "Bash(pod:*)",
      "Bash(ps:*)",
      "Bash(pwd:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(rake:*)",
      "Bash(ruby:*)",
      "Bash(sed:*)",
      "Bash(sort:*)",
      "Bash(swift:*)",
      "Bash(tail:*)",
      "Bash(test:*)",
      "Bash(time:*)",
      "Bash(touch:*)",
      "Bash(tree:*)",
      "Bash(uname:*)",
      "Bash(uptime:*)",
      "Bash(uv:*)",
      "Bash(wc:*)",
      "Bash(which:*)",
      "Bash(whoami:*)",
      "Bash(wrangler:*)",
      "Bash(xcdebug:*)",
      "Bash(xcodebuild:*)",
      "Bash(xcode-select:*)",
      "Bash(xcrun:*)",
      "Bash(xctrace:*)",
      "Bash(yarn:*)"
    ],
    "deny": []
  },
  "model": "opusplan",
  "feedbackSurveyState": {
    "lastShownTime": 1754093691446
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); get_cost() { echo \"$1\" | jq -r '.cost.total_cost_usd // \"0.00\"'; }; model_name=$(echo \"$input\" | jq -r '.model.display_name'); cost=$(get_cost \"$input\"); printf \"Model: %s | Cost: $%s\" \"$model_name\" \"$cost\""
  }
}